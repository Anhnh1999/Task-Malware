.386
.model flat,stdcall
option casemap:none
include C:\masm32\include\kernel32.inc
includelib C:\masm32\lib\kernel32.lib
BufSize = 32
.data
	STD_INPUT_HANDLE dd -10
	STD_OUTPUT_HANDLE dd -11
	STD_ERROR_HANDLE dd -12
	msg1 db "Entered String: ",0
	lenMsg1 dword ($-msg1)
	msg2 db "Uppercase String : ",0
	lenMsg2 dword ($-msg2)
	buffer BYTE BufSize DUP(?),0,0
	len_bytes_read DD ?
	len_bytes_write DD ?
	hOut dd ?
	hIn dd ?
.code 
	start:
		;get the handle of the standard output device 
		push STD_OUTPUT_HANDLE
		call GetStdHandle
		mov hOut, eax
		;print msg1
		push 0
		push lenMsg1
		push offset msg1
		push hOut
		call WriteConsoleA
		;get the handle of the standard input device 
		push STD_INPUT_HANDLE
		call GetStdHandle
		mov hIn, eax
		push 0
		push offset len_bytes_read
		push 12
		push offset buffer
		push hIn 
		call ReadConsole
		;print msg2
		push STD_OUTPUT_HANDLE
		call GetStdHandle
		mov hOut, eax
		push 0
		push lenMsg2
		push offset msg2
		push hOut
		call WriteConsoleA
		;convert lowercase to uppercase 
		mov esi, OFFSET buffer
		mov cl, 32
		lap: 
			cmp BYTE PTR [esi],'a'
			jb next
			cmp BYTE PTR [esi],'z'
			ja next 
			sub BYTE PTR [esi],20h
		next: 
			inc esi
			dec cl
			jnz lap
		push STD_OUTPUT_HANDLE
		call GetStdHandle
		push 0
		push len_bytes_read
		push offset buffer
		push eax
		call WriteConsoleA
		;exit 
		push 0
		call ExitProcess
		
	end start
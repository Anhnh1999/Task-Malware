section .data
    msg1 db 'Nhap n: ',0x0
    msg2 db 'Day Fibonaci: ',0x0
section .bss
    n resb 255
    arrF resb 255
section .text   
    global _start
    _start:
    ;print msg1
    mov eax,msg1
    call print_string
    ;Enter n
    mov edx,255
    mov ecx,n
    mov ebx,0
    mov eax,3
    int 80h
    mov edi,n 
    call atoi
    ;call print_int
    ;----------------------------------------------
    ;fibonacii function
    mov ecx,eax
    mov ebx,0
    mov edx,1
    xor eax,eax
    call print_int_space
    add eax,1
    call print_int_space   
    _fibo:
        cmp ecx,2
        jna exit
        add ebx,edx 
        mov eax,ebx  
        mov ebx,edx
        mov edx,eax         
        call print_int_space
        dec ecx
        jmp _fibo                        
    exit:
        mov eax,1
        int 80h
    ;-----------------------------------------------
    ;chuyen int sang str
    atoi:
        mov eax,0
    convert:
        movzx esi, byte [edi]
        cmp esi,0xa
        je done
        test esi,_endString
        je done
        cmp esi,48
        jl error
        cmp esi,57
        jg error
        sub esi,48
        imul eax,10
        add eax,esi
        inc edi
        jmp convert
    error:
        mov eax,-1
    done:
        ret
    ;-----------------------------------------------
    ;lay do dai chuoi
    string_len:
        push ebx
        mov ebx,eax
    next_char:
        cmp byte [eax],0
        jz _endString
        inc eax
        jmp next_char
    _endString:
        sub eax,ebx
        pop ebx
        ret

    ;-----------------------------------------------
    ;in chuoi
    print_string:
        push edx
        push ecx
        push ebx
        push eax
        call string_len   ;eax <- len(string)
        mov edx, eax
        pop eax           ;eax <- string
        mov ecx, eax
        mov ebx,1
        mov eax,4
        int 80h

        pop ebx
        pop ecx
        pop edx
        ret
        
    ;-----------------------------------------------
    ;in chuoi co xuong dong
    print_string_space:
        call print_string
        push eax
        mov eax,0ah
        push eax
        mov eax, esp
        call print_string
        pop eax
        pop eax
        ret
    ;-----------------------------------------------
    ;in so ra man hinh
    print_int:
        push eax
        push ecx
        push edx
        push esi
        mov ecx,0
    div_loop:
        inc ecx
        xor edx,edx
        mov esi,10
        idiv esi
        add edx,48
        push edx
        cmp eax,0
        jnz div_loop
    print_loop:
        dec ecx
        mov eax,esp
        call print_string
        pop eax
        cmp ecx,0
        jnz print_loop

        pop esi
        pop edx
        pop ecx
        pop eax
        ret
    ;-----------------------------------------------
    ;in so co xuong dong
    print_int_space:
        call print_int
        
        push	eax
        mov	eax, ','
        push	eax
        mov	eax, esp
        call	print_string
        pop	eax
        pop	eax
        ret